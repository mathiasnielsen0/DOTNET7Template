// <auto-generated>
// ReSharper disable All

using Core.DbModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;

namespace DatabaseAccess.Data
{
    // ****************************************************************************************************
    // This is not a commercial licence, therefore only a few tables/views/stored procedures are generated.
    // ****************************************************************************************************

    // User
    public class UserConfiguration : IEntityTypeConfiguration<User>
    {
        public void Configure(EntityTypeBuilder<User> builder)
        {
            builder.ToTable("User", "dbo");
            builder.HasKey(x => new { x.Id, x.Name, x.Email, x.PasswordHash, x.Salt, x.Administrator });

            builder.Property(x => x.Id).HasColumnName(@"ID").HasColumnType("int").IsRequired().ValueGeneratedOnAdd().UseIdentityColumn();
            builder.Property(x => x.Name).HasColumnName(@"Name").HasColumnType("nvarchar(255)").IsRequired().HasMaxLength(255).ValueGeneratedNever();
            builder.Property(x => x.Email).HasColumnName(@"Email").HasColumnType("nvarchar(255)").IsRequired().HasMaxLength(255).ValueGeneratedNever();
            builder.Property(x => x.ResetPasswordGuid).HasColumnName(@"ResetPasswordGuid").HasColumnType("uniqueidentifier").IsRequired(false);
            builder.Property(x => x.PasswordHash).HasColumnName(@"PasswordHash").HasColumnType("nvarchar(255)").IsRequired().HasMaxLength(255).ValueGeneratedNever();
            builder.Property(x => x.Salt).HasColumnName(@"Salt").HasColumnType("nvarchar(255)").IsRequired().HasMaxLength(255).ValueGeneratedNever();
            builder.Property(x => x.Administrator).HasColumnName(@"Administrator").HasColumnType("bit").IsRequired().ValueGeneratedNever();
        }
    }

}
// </auto-generated>
